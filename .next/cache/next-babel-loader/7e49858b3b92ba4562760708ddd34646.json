{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kataokayuuto/Desktop/react-study/Harvest_next/pages/Authentication.js\",\n    _this = this;\n\nimport firebase from \"firebase/app\";\nimport firebaseui from \"firebaseui\"; // Firebase設定\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA3edHzgEMFoK9bzVPHHJ3DeRFiUnHrsiI\",\n  authDomain: \"harvest-6137e.firebaseapp.com\",\n  databaseURL: \"https://harvest-6137e-default-rtdb.firebaseio.com\",\n  projectId: \"harvest-6137e\",\n  storageBucket: \"harvest-6137e.appspot.com\",\n  messagingSenderId: \"749707619690\",\n  appId: \"1:749707619690:web:5947ccf93ab56de5a10913\",\n  measurementId: \"G-RFMQZPT3CT\"\n}; // Firebase初期化\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\nvar uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function signInSuccessWithAuthResult(authResult, redirectUrl) {\n      // User successfully signed in.\n      // Return type determines whether we continue the redirect automatically\n      // or whether we leave that to developer to handle.\n      return true;\n    },\n    uiShown: function uiShown() {\n      // The widget is rendered.\n      // Hide the loader.\n      document.getElementById('loader').style.display = 'none';\n    }\n  },\n  // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n  signInFlow: 'popup',\n  signInSuccessUrl: '<url-to-redirect-to-on-success>',\n  signInOptions: [// Leave the lines as is for the providers you want to offer your users.\n  firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.TwitterAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.PhoneAuthProvider.PROVIDER_ID],\n  // Terms of service url.\n  tosUrl: '<your-tos-url>',\n  // Privacy policy url.\n  privacyPolicyUrl: '<your-privacy-policy-url>'\n};\nui.start('#firebaseui-auth-container', uiConfig);\nexport default (function () {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello, Firebase Hosting!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"firebaseui-auth-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loader\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, _this);\n});","map":{"version":3,"sources":["/Users/kataokayuuto/Desktop/react-study/Harvest_next/pages/Authentication.js"],"names":["firebase","firebaseui","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","ui","auth","AuthUI","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","uiShown","document","getElementById","style","display","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","GithubAuthProvider","EmailAuthProvider","PhoneAuthProvider","tosUrl","privacyPolicyUrl","start"],"mappings":";;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,+BAFS;AAGrBC,EAAAA,WAAW,EAAE,mDAHQ;AAIrBC,EAAAA,SAAS,EAAE,eAJU;AAKrBC,EAAAA,aAAa,EAAE,2BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB,C,CAUA;;AACA,IAAIV,QAAQ,CAACW,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BZ,EAAAA,QAAQ,CAACa,aAAT,CAAuBX,cAAvB;AACD;;AAED,IAAIY,EAAE,GAAG,IAAIb,UAAU,CAACc,IAAX,CAAgBC,MAApB,CAA2BhB,QAAQ,CAACe,IAAT,EAA3B,CAAT;AACA,IAAME,QAAQ,GAAG;AACfC,EAAAA,SAAS,EAAE;AACTC,IAAAA,2BAA2B,EAAE,qCAASC,UAAT,EAAqBC,WAArB,EAAkC;AAC7D;AACA;AACA;AACA,aAAO,IAAP;AACD,KANQ;AAOTC,IAAAA,OAAO,EAAE,mBAAW;AAClB;AACA;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,OAAxC,GAAkD,MAAlD;AACD;AAXQ,GADI;AAcf;AACAC,EAAAA,UAAU,EAAE,OAfG;AAgBfC,EAAAA,gBAAgB,EAAE,iCAhBH;AAiBfC,EAAAA,aAAa,EAAE,CACb;AACA7B,EAAAA,QAAQ,CAACe,IAAT,CAAce,kBAAd,CAAiCC,WAFpB,EAGb/B,QAAQ,CAACe,IAAT,CAAciB,oBAAd,CAAmCD,WAHtB,EAIb/B,QAAQ,CAACe,IAAT,CAAckB,mBAAd,CAAkCF,WAJrB,EAKb/B,QAAQ,CAACe,IAAT,CAAcmB,kBAAd,CAAiCH,WALpB,EAMb/B,QAAQ,CAACe,IAAT,CAAcoB,iBAAd,CAAgCJ,WANnB,EAOb/B,QAAQ,CAACe,IAAT,CAAcqB,iBAAd,CAAgCL,WAPnB,CAjBA;AA0Bf;AACAM,EAAAA,MAAM,EAAE,gBA3BO;AA4Bf;AACAC,EAAAA,gBAAgB,EAAE;AA7BH,CAAjB;AA+BAxB,EAAE,CAACyB,KAAH,CAAS,4BAAT,EAAuCtB,QAAvC;AAEA,gBAAe;AAAA,sBACb;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADa;AAAA,CAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport firebaseui from \"firebaseui\";\n\n// Firebase設定\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA3edHzgEMFoK9bzVPHHJ3DeRFiUnHrsiI\",\n  authDomain: \"harvest-6137e.firebaseapp.com\",\n  databaseURL: \"https://harvest-6137e-default-rtdb.firebaseio.com\",\n  projectId: \"harvest-6137e\",\n  storageBucket: \"harvest-6137e.appspot.com\",\n  messagingSenderId: \"749707619690\",\n  appId: \"1:749707619690:web:5947ccf93ab56de5a10913\",\n  measurementId: \"G-RFMQZPT3CT\"\n};\n// Firebase初期化\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\nconst uiConfig = {\n  callbacks: {\n    signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n      // User successfully signed in.\n      // Return type determines whether we continue the redirect automatically\n      // or whether we leave that to developer to handle.\n      return true;\n    },\n    uiShown: function() {\n      // The widget is rendered.\n      // Hide the loader.\n      document.getElementById('loader').style.display = 'none';\n    }\n  },\n  // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n  signInFlow: 'popup',\n  signInSuccessUrl: '<url-to-redirect-to-on-success>',\n  signInOptions: [\n    // Leave the lines as is for the providers you want to offer your users.\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    firebase.auth.GithubAuthProvider.PROVIDER_ID,\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.PhoneAuthProvider.PROVIDER_ID\n  ],\n  // Terms of service url.\n  tosUrl: '<your-tos-url>',\n  // Privacy policy url.\n  privacyPolicyUrl: '<your-privacy-policy-url>'\n};\nui.start('#firebaseui-auth-container', uiConfig);\n\nexport default () =>( \n  <div>\n      <p>Hello, Firebase Hosting!</p>\n      <div id=\"firebaseui-auth-container\"></div>\n      <div id=\"loader\">Loading...</div>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}