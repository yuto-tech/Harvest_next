{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kataokayuuto/Desktop/react-study/Harvest_next/pages/form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport Login from '../Components/Login';\nimport '../firebaseClient';\nconst {\n  0: user,\n  1: setUser\n} = useState('');\nconst {\n  0: email,\n  1: setEmail\n} = useState('');\nconst {\n  0: password,\n  1: setPassword\n} = useState('');\nconst {\n  0: emailError,\n  1: setEmailError\n} = useState('');\nconst {\n  0: passwordError,\n  1: setpasswordError\n} = useState('');\nconst {\n  0: hasAccount,\n  1: sethasAccount\n} = useState('');\n\nconst crearInputs = () => {\n  setEmail('');\n  setPassword('');\n};\n\nconst crearErrors = () => {\n  setEmailError('');\n  setpasswordError('');\n};\n\nconst handlelogin = () => {\n  crearErrors('');\n  firebase.auth().signInWithEmailAndPassword(email, password).catch(error => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n\n    switch (errorCode) {\n      case \"auth/invaild-email\":\n      case \"auth/user-disabled\":\n      case \"auth/ser-not-found\":\n        setEmailError(errorMessage);\n        break;\n\n      case \"auth/wrong-password\":\n        setpasswordError(errorMessage);\n        break;\n    }\n  });\n};\n\nconst handleSignup = () => {\n  crearErrors('');\n  firebase.auth().signInWithEmailAndPassword(email, password).catch(error => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n\n    switch (errorCode) {\n      case \"auth/email-already-in-use\":\n      case \"auth/inviled-email\":\n        setEmailError(errorMessage);\n        break;\n\n      case \"auth/weak-password\":\n        setpasswordError(errorMessage);\n        break;\n    }\n  });\n};\n\nconst handleLogout = () => {\n  firebase.auth().signOut();\n};\n\nconst authListener = () => {\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      crearInputs();\n      setUser(user);\n    } else {\n      setUser(\"\");\n    }\n  });\n};\n\nuseEffect(() => {\n  authListener();\n}, []);\nexport default (() => /*#__PURE__*/_jsxDEV(Login, {\n  email: email,\n  setEmail: setEmail,\n  password: password,\n  setPassword: setPassword,\n  handlelogin: handlelogin,\n  handleSignup: handleSignup,\n  handleLogout: handleLogout,\n  sethasAccount: sethasAccount,\n  emailError: emailError,\n  passwordError: passwordError\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 86,\n  columnNumber: 5\n}, this));","map":{"version":3,"sources":["/Users/kataokayuuto/Desktop/react-study/Harvest_next/pages/form.js"],"names":["React","useState","useEffect","firebase","Login","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setpasswordError","hasAccount","sethasAccount","crearInputs","crearErrors","handlelogin","auth","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","handleSignup","handleLogout","signOut","authListener","onAuthStateChanged"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAiB,qBAAjB;AACA,OAAO,mBAAP;AAEA,MAAM;AAAA,KAACC,IAAD;AAAA,KAAOC;AAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAM;AAAA,KAACM,KAAD;AAAA,KAAQC;AAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAM;AAAA,KAACQ,QAAD;AAAA,KAAWC;AAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAM;AAAA,KAACU,UAAD;AAAA,KAAaC;AAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAM;AAAA,KAACY,aAAD;AAAA,KAAgBC;AAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,MAAM;AAAA,KAACc,UAAD;AAAA,KAAaC;AAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;;AAEA,MAAMgB,WAAW,GAAG,MAAM;AACxBT,EAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,EAAAA,WAAW,CAAC,EAAD,CAAX;AACD,CAHD;;AAKA,MAAMQ,WAAW,GAAG,MAAM;AACxBN,EAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,EAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,CAHD;;AAKA,MAAMK,WAAW,GAAG,MAAM;AACxBD,EAAAA,WAAW,CAAC,EAAD,CAAX;AACAf,EAAAA,QAAQ,CACPiB,IADD,GAECC,0BAFD,CAE4Bd,KAF5B,EAEmCE,QAFnC,EAGCa,KAHD,CAGQC,KAAD,IAAW;AAChB,QAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;;AACA,YAAQH,SAAR;AACE,WAAK,oBAAL;AACA,WAAK,oBAAL;AACA,WAAK,oBAAL;AACEZ,QAAAA,aAAa,CAACc,YAAD,CAAb;AACA;;AACF,WAAK,qBAAL;AACEZ,QAAAA,gBAAgB,CAACY,YAAD,CAAhB;AACA;AARJ;AAUD,GAhBD;AAiBD,CAnBD;;AAqBA,MAAME,YAAY,GAAG,MAAM;AACzBV,EAAAA,WAAW,CAAC,EAAD,CAAX;AACAf,EAAAA,QAAQ,CACPiB,IADD,GAECC,0BAFD,CAE4Bd,KAF5B,EAEmCE,QAFnC,EAGCa,KAHD,CAGQC,KAAD,IAAW;AAChB,QAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;;AACA,YAAQH,SAAR;AACE,WAAK,2BAAL;AACA,WAAK,oBAAL;AACEZ,QAAAA,aAAa,CAACc,YAAD,CAAb;AACA;;AACF,WAAK,oBAAL;AACEZ,QAAAA,gBAAgB,CAACY,YAAD,CAAhB;AACA;AAPJ;AASD,GAfD;AAgBD,CAlBD;;AAoBA,MAAMG,YAAY,GAAG,MAAM;AACzB1B,EAAAA,QAAQ,CAACiB,IAAT,GAAgBU,OAAhB;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAG,MAAM;AACzB5B,EAAAA,QAAQ,CAACiB,IAAT,GAAgBY,kBAAhB,CAAoC3B,IAAI,IAAI;AAC1C,QAAIA,IAAJ,EAAU;AACRY,MAAAA,WAAW;AACXX,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAHD,MAGO;AACLC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAPD;AAQD,CATD;;AAWAJ,SAAS,CAAC,MAAM;AACd6B,EAAAA,YAAY;AACb,CAFQ,EAEP,EAFO,CAAT;AAKA,gBAAe,mBACX,QAAC,KAAD;AACA,EAAA,KAAK,EAAExB,KADP;AAEA,EAAA,QAAQ,EAAEC,QAFV;AAGA,EAAA,QAAQ,EAAEC,QAHV;AAIA,EAAA,WAAW,EAAEC,WAJb;AAKA,EAAA,WAAW,EAAES,WALb;AAMA,EAAA,YAAY,EAAES,YANd;AAOA,EAAA,YAAY,EAAEC,YAPd;AAQA,EAAA,aAAa,EAAEb,aARf;AASA,EAAA,UAAU,EAAEL,UATZ;AAUA,EAAA,aAAa,EAAEE;AAVf;AAAA;AAAA;AAAA;AAAA,QADJ","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport firebase from \"firebase/app\";\nimport 'firebase/auth' ;\nimport Login from'../Components/Login';\nimport '../firebaseClient';\n\nconst [user, setUser] = useState('');\nconst [email, setEmail] = useState('');\nconst [password, setPassword] = useState('');\nconst [emailError, setEmailError] = useState('');\nconst [passwordError, setpasswordError] = useState('');\nconst [hasAccount, sethasAccount] = useState('');\n\nconst crearInputs = () => {\n  setEmail('');\n  setPassword('');\n}\n\nconst crearErrors = () => {\n  setEmailError('');\n  setpasswordError('');\n}\n\nconst handlelogin = () => {\n  crearErrors('');\n  firebase\n  .auth()\n  .signInWithEmailAndPassword(email, password)\n  .catch((error) => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    switch (errorCode){\n      case \"auth/invaild-email\":\n      case \"auth/user-disabled\":\n      case \"auth/ser-not-found\":\n        setEmailError(errorMessage);\n        break;\n      case \"auth/wrong-password\":\n        setpasswordError(errorMessage);\n        break;\n    }\n  });\n}\n\nconst handleSignup = () => {\n  crearErrors('');\n  firebase\n  .auth()\n  .signInWithEmailAndPassword(email, password)\n  .catch((error) => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    switch (errorCode){\n      case \"auth/email-already-in-use\":\n      case \"auth/inviled-email\":\n        setEmailError(errorMessage);\n        break;\n      case \"auth/weak-password\":\n        setpasswordError(errorMessage);\n        break;\n    }\n  });\n}\n\nconst handleLogout = () => {\n  firebase.auth().signOut();\n}\n\nconst authListener = () => {\n  firebase.auth().onAuthStateChanged( user => {\n    if (user) {\n      crearInputs();\n      setUser(user);\n    } else {\n      setUser(\"\");\n    }\n  });\n}\n\nuseEffect(() => {\n  authListener();\n},[])\n\n\nexport default () => (\n    <Login\n    email={email}\n    setEmail={setEmail}\n    password={password}\n    setPassword={setPassword}\n    handlelogin={handlelogin}\n    handleSignup={handleSignup}\n    handleLogout={handleLogout}\n    sethasAccount={sethasAccount}\n    emailError={emailError}\n    passwordError={passwordError}\n    />\n)"]},"metadata":{},"sourceType":"module"}