{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kataokayuuto/Desktop/react-study/Harvest_next/Components/Form.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Login from '../pages/Login';\nimport Footer from './Footer';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Index from '../pages/index';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA3edHzgEMFoK9bzVPHHJ3DeRFiUnHrsiI\",\n  authDomain: \"harvest-6137e.firebaseapp.com\",\n  databaseURL: \"https://harvest-6137e-default-rtdb.firebaseio.com\",\n  projectId: \"harvest-6137e\",\n  storageBucket: \"harvest-6137e.appspot.com\",\n  messagingSenderId: \"749707619690\",\n  appId: \"1:749707619690:web:5947ccf93ab56de5a10913\",\n  measurementId: \"G-RFMQZPT3CT\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const MainForm = /*#__PURE__*/React.createContext();\nexport const Maincontent = /*#__PURE__*/React.createContext();\n\nconst Form = props => {\n  const {\n    0: user,\n    1: setUser\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: emailError,\n    1: setEmailError\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setpasswordError\n  } = useState('');\n  const {\n    0: hasAccount,\n    1: sethasAccount\n  } = useState('');\n\n  const crearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const crearErrors = () => {\n    setEmailError('');\n    setpasswordError('');\n  };\n\n  const handlelogin = () => {\n    crearErrors('');\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      switch (errorCode) {\n        case \"auth/invaild-email\":\n        case \"auth/user-disabled\":\n        case \"auth/ser-not-found\":\n          setEmailError(errorMessage);\n          break;\n\n        case \"auth/wrong-password\":\n          setpasswordError(errorMessage);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    crearErrors('');\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      switch (errorCode) {\n        case \"auth/email-already-in-use\":\n        case \"auth/inviled-email\":\n          setEmailError(errorMessage);\n          break;\n\n        case \"auth/weak-password\":\n          setpasswordError(errorMessage);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n  };\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        crearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Harvest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: user ? props.children : /*#__PURE__*/_jsxDEV(MainForm.Provider, {\n        value: (email, setEmail, password, setPassword, handlelogin, handleSignup, handleLogout, sethasAccount, emailError, passwordError),\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/kataokayuuto/Desktop/react-study/Harvest_next/Components/Form.jsx"],"names":["React","useState","useEffect","useContext","Head","Link","Login","Footer","firebase","Index","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","MainForm","createContext","Maincontent","Form","props","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setpasswordError","hasAccount","sethasAccount","crearInputs","crearErrors","handlelogin","auth","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","handleSignup","handleLogout","signOut","authListener","onAuthStateChanged","children"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,useContext} from \"react\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Login from '../pages/Login';\nimport Footer from './Footer';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Index from '../pages/index';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA3edHzgEMFoK9bzVPHHJ3DeRFiUnHrsiI\",\n  authDomain: \"harvest-6137e.firebaseapp.com\",\n  databaseURL: \"https://harvest-6137e-default-rtdb.firebaseio.com\",\n  projectId: \"harvest-6137e\",\n  storageBucket: \"harvest-6137e.appspot.com\",\n  messagingSenderId: \"749707619690\",\n  appId: \"1:749707619690:web:5947ccf93ab56de5a10913\",\n  measurementId: \"G-RFMQZPT3CT\"\n};\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const MainForm = React.createContext();\nexport const Maincontent = React.createContext();\n\nconst Form = (props) => {\n  \n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setpasswordError] = useState('');\n  const [hasAccount, sethasAccount] = useState('');\n\n  const crearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const crearErrors = () => {\n    setEmailError('');\n    setpasswordError('');\n  }\n\n  const handlelogin = () => {\n    crearErrors('');\n    firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((error) => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      switch (errorCode){\n        case \"auth/invaild-email\":\n        case \"auth/user-disabled\":\n        case \"auth/ser-not-found\":\n          setEmailError(errorMessage);\n          break;\n        case \"auth/wrong-password\":\n          setpasswordError(errorMessage);\n          break;\n      }\n    });\n  }\n\n  const handleSignup = () => {\n    crearErrors('');\n    firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((error) => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      switch (errorCode){\n        case \"auth/email-already-in-use\":\n        case \"auth/inviled-email\":\n          setEmailError(errorMessage);\n          break;\n        case \"auth/weak-password\":\n          setpasswordError(errorMessage);\n          break;\n      }\n    });\n  }\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n  }\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged( user => {\n      if (user) {\n        crearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  }\n\n  useEffect(() => {\n    authListener();\n  },[])\n  \n  return (\n    <>\n    <Head>\n      <title>Harvest</title>\n      <meta charSet='utf-8'/>\n      <meta name='viewport' content='initial-scale=1.0, width=device-width' />\n    </Head>\n    <body>\n      { user\n       ? \n      (props.children) \n       :\n      (<MainForm.Provider\n        value={\n          email,\n          setEmail,\n          password,\n          setPassword,\n          handlelogin,\n          handleSignup,\n          handleLogout,\n          sethasAccount,\n          emailError,\n          passwordError\n        }>\n          <Login/>\n        </MainForm.Provider>\n        )\n      }\n    </body>\n  </>);\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}