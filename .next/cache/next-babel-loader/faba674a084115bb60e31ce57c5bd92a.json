{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kataokayuuto/Desktop/Harvest_next/Components/Authentication.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport firebaseClient from '../firebaseClient';\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport 'firebase/storage';\nimport 'firebase/app';\nfirebaseClient();\nvar auth = firebase.auth();\nvar firestore = firebase.firestore();\nvar storage = firebase.storage();\n\nvar SignGoogle = function SignGoogle() {\n  _s();\n\n  var router = useRouter();\n\n  var signInWithGoogle = function signInWithGoogle() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    var Users = firestore.collection('UserList');\n    var _auth$currentUser = auth.currentUser,\n        uid = _auth$currentUser.uid,\n        displayName = _auth$currentUser.displayName,\n        photoURL = _auth$currentUser.photoURL;\n    auth.signInWithPopup(provider);\n    Users.doc(uid).set({\n      Name: displayName,\n      photoURL: photoURL,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid: uid\n    }).then(function () {\n      router.replace('/');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: signInWithGoogle,\n    children: \"Google\\u8A8D\\u8A3C\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SignGoogle, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignGoogle;\nexport default SignGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignGoogle\");","map":{"version":3,"sources":["/Users/kataokayuuto/Desktop/Harvest_next/Components/Authentication.js"],"names":["React","useState","useEffect","useRouter","firebaseClient","firebase","auth","firestore","storage","SignGoogle","router","signInWithGoogle","provider","GoogleAuthProvider","Users","collection","currentUser","uid","displayName","photoURL","signInWithPopup","doc","set","Name","createdAt","FieldValue","serverTimestamp","then","replace"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;AACA,OAAO,cAAP;AAEAD,cAAc;AACd,IAAME,IAAI,GAAGD,QAAQ,CAACC,IAAT,EAAb;AACA,IAAMC,SAAS,GAAIF,QAAQ,CAACE,SAAT,EAAnB;AACA,IAAMC,OAAO,GAAGH,QAAQ,CAACG,OAAT,EAAhB;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AACA,MAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAMC,QAAQ,GAAG,IAAIP,QAAQ,CAACC,IAAT,CAAcO,kBAAlB,EAAjB;AACA,QAAMC,KAAK,GAAGP,SAAS,CAACQ,UAAV,CAAqB,UAArB,CAAd;AAF6B,4BAGMT,IAAI,CAACU,WAHX;AAAA,QAGtBC,GAHsB,qBAGtBA,GAHsB;AAAA,QAGlBC,WAHkB,qBAGlBA,WAHkB;AAAA,QAGNC,QAHM,qBAGNA,QAHM;AAI7Bb,IAAAA,IAAI,CAACc,eAAL,CAAqBR,QAArB;AACAE,IAAAA,KAAK,CAACO,GAAN,CAAUJ,GAAV,EAAeK,GAAf,CAAmB;AACnBC,MAAAA,IAAI,EAACL,WADc;AAEnBC,MAAAA,QAAQ,EAARA,QAFmB;AAGnBK,MAAAA,SAAS,EAACnB,QAAQ,CAACE,SAAT,CAAmBkB,UAAnB,CAA8BC,eAA9B,EAHS;AAInBT,MAAAA,GAAG,EAAHA;AAJmB,KAAnB,EAKCU,IALD,CAKM,YAAI;AACVjB,MAAAA,MAAM,CAACkB,OAAP,CAAe,GAAf;AACD,KAPC;AAQD,GAbD;;AAcA,sBACE;AAAQ,IAAA,OAAO,EAAEjB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CAnBD;;GAAMF,U;UACWN,S;;;KADXM,U;AAoBN,eAAeA,UAAf","sourcesContent":["import React,{ useState, useEffect} from 'react';\nimport { useRouter } from 'next/router';\nimport firebaseClient from '../firebaseClient';\nimport firebase from \"firebase/app\"\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport 'firebase/storage';\nimport 'firebase/app';\n\nfirebaseClient();\nconst auth = firebase.auth();\nconst firestore =  firebase.firestore();\nconst storage = firebase.storage();\n\n\nconst SignGoogle = () => {\n  const router = useRouter();\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const Users = firestore.collection('UserList');\n    const {uid,displayName,photoURL} = auth.currentUser;\n    auth.signInWithPopup(provider);\n    Users.doc(uid).set({\n    Name:displayName,\n    photoURL,\n    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\n    uid\n  }).then(()=>{\n    router.replace('/');\n  })\n  }\n  return(\n    <button onClick={signInWithGoogle} >Google認証</button>\n  )\n}\nexport default SignGoogle;"]},"metadata":{},"sourceType":"module"}