{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport '../firebaseClient';\n\nvar Form = function Form() {\n  _s();\n\n  var _useState = useState(''),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(''),\n      emailError = _useState4[0],\n      setEmailError = _useState4[1];\n\n  var _useState5 = useState(''),\n      passwordError = _useState5[0],\n      setpasswordError = _useState5[1];\n\n  var _useState6 = useState(''),\n      hasAccount = _useState6[0],\n      sethasAccount = _useState6[1];\n\n  var crearInputs = function crearInputs() {\n    setEmail('');\n    setPassword('');\n  };\n\n  var crearErrors = function crearErrors() {\n    setEmailError('');\n    setpasswordError('');\n  };\n\n  var handlelogin = function handlelogin() {\n    crearErrors('');\n    firebase.auth().signInWithEmailAndPassword(email, password)[\"catch\"](function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      switch (errorCode) {\n        case \"auth/invaild-email\":\n        case \"auth/user-disabled\":\n        case \"auth/ser-not-found\":\n          setEmailError(errorMessage);\n          break;\n\n        case \"auth/wrong-password\":\n          setpasswordError(errorMessage);\n          break;\n      }\n    });\n  };\n\n  var handleSignup = function handleSignup() {\n    crearErrors('');\n    firebase.auth().signInWithEmailAndPassword(email, password)[\"catch\"](function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      switch (errorCode) {\n        case \"auth/email-already-in-use\":\n        case \"auth/inviled-email\":\n          setEmailError(errorMessage);\n          break;\n\n        case \"auth/weak-password\":\n          setpasswordError(errorMessage);\n          break;\n      }\n    });\n  };\n\n  var handleLogout = function handleLogout() {\n    firebase.auth().signOut();\n  };\n\n  var authListener = function authListener() {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        crearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(function () {\n    authListener();\n  }, []);\n};\n\n_s(Form, \"TBXAdIS3M28bE6rQRkybQ8k7mYE=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/kataokayuuto/Desktop/react-study/Harvest_next/Components/Form.js"],"names":["React","useState","useEffect","firebase","Form","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setpasswordError","hasAccount","sethasAccount","crearInputs","crearErrors","handlelogin","auth","signInWithEmailAndPassword","error","errorCode","code","errorMessage","message","handleSignup","handleLogout","signOut","authListener","onAuthStateChanged"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport firebase from \"firebase/app\";\nimport 'firebase/auth' ;\nimport '../firebaseClient';\n\n\nconst Form = () => {\n  \n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setpasswordError] = useState('');\n  const [hasAccount, sethasAccount] = useState('');\n\n  const crearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const crearErrors = () => {\n    setEmailError('');\n    setpasswordError('');\n  }\n\n  const handlelogin = () => {\n    crearErrors('');\n    firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((error) => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      switch (errorCode){\n        case \"auth/invaild-email\":\n        case \"auth/user-disabled\":\n        case \"auth/ser-not-found\":\n          setEmailError(errorMessage);\n          break;\n        case \"auth/wrong-password\":\n          setpasswordError(errorMessage);\n          break;\n      }\n    });\n  }\n\n  const handleSignup = () => {\n    crearErrors('');\n    firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch((error) => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      switch (errorCode){\n        case \"auth/email-already-in-use\":\n        case \"auth/inviled-email\":\n          setEmailError(errorMessage);\n          break;\n        case \"auth/weak-password\":\n          setpasswordError(errorMessage);\n          break;\n      }\n    });\n  }\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n  }\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged( user => {\n      if (user) {\n        crearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  }\n\n  useEffect(() => {\n    authListener();\n  },[])\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}