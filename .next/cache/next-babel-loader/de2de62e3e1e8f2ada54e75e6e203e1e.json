{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kataokayuuto/Desktop/Harvest_next/Components/Authentication.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport firebaseClient from '../firebaseClient';\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport 'firebase/storage';\nimport 'firebase/app';\nfirebaseClient();\nvar auth = firebase.auth();\nvar firestore = firebase.firestore();\nvar storage = firebase.storage();\nexport default function SignGoogle() {\n  var _s = $RefreshSig$();\n\n  var signInWithGoogle = function signInWithGoogle() {\n    _s();\n\n    var router = useRouter();\n    var provider = new firebase.auth.GoogleAuthProvider();\n    var Users = firestore.collection('UserList');\n    var _auth$currentUser = auth.currentUser,\n        uid = _auth$currentUser.uid,\n        displayName = _auth$currentUser.displayName,\n        photoURL = _auth$currentUser.photoURL;\n    auth.signInWithPopup(provider);\n    Users.doc(uid).set({\n      Name: displayName,\n      photoURL: photoURL,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid: uid\n    }).then(function () {\n      //ここがうまくいっていない\n      router.replace('/');\n    });\n  };\n\n  _s(signInWithGoogle, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n    return [useRouter];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: signInWithGoogle,\n    children: \"sign in with Google\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = SignGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignGoogle\");","map":{"version":3,"sources":["/Users/kataokayuuto/Desktop/Harvest_next/Components/Authentication.js"],"names":["React","useState","useEffect","useRouter","firebaseClient","firebase","auth","firestore","storage","SignGoogle","signInWithGoogle","router","provider","GoogleAuthProvider","Users","collection","currentUser","uid","displayName","photoURL","signInWithPopup","doc","set","Name","createdAt","FieldValue","serverTimestamp","then","replace"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;AACA,OAAO,cAAP;AAEAD,cAAc;AACd,IAAME,IAAI,GAAGD,QAAQ,CAACC,IAAT,EAAb;AACA,IAAMC,SAAS,GAAIF,QAAQ,CAACE,SAAT,EAAnB;AACA,IAAMC,OAAO,GAAGH,QAAQ,CAACG,OAAT,EAAhB;AAGA,eAAe,SAASC,UAAT,GAAuB;AAAA;;AACpC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC7B,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAG,IAAIP,QAAQ,CAACC,IAAT,CAAcO,kBAAlB,EAAjB;AACA,QAAMC,KAAK,GAAGP,SAAS,CAACQ,UAAV,CAAqB,UAArB,CAAd;AAH6B,4BAIMT,IAAI,CAACU,WAJX;AAAA,QAItBC,GAJsB,qBAItBA,GAJsB;AAAA,QAIlBC,WAJkB,qBAIlBA,WAJkB;AAAA,QAINC,QAJM,qBAINA,QAJM;AAK7Bb,IAAAA,IAAI,CAACc,eAAL,CAAqBR,QAArB;AACAE,IAAAA,KAAK,CAACO,GAAN,CAAUJ,GAAV,EAAeK,GAAf,CAAmB;AACnBC,MAAAA,IAAI,EAACL,WADc;AAEnBC,MAAAA,QAAQ,EAARA,QAFmB;AAGnBK,MAAAA,SAAS,EAACnB,QAAQ,CAACE,SAAT,CAAmBkB,UAAnB,CAA8BC,eAA9B,EAHS;AAInBT,MAAAA,GAAG,EAAHA;AAJmB,KAAnB,EAKCU,IALD,CAKM,YAAI;AACV;AACAhB,MAAAA,MAAM,CAACiB,OAAP,CAAe,GAAf;AACD,KARC;AASD,GAfD;;AADoC,KAC9BlB,gBAD8B;AAAA,YAEnBP,SAFmB;AAAA;;AAiBpC,sBACE;AAAQ,IAAA,OAAO,EAAEO,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;KApBuBD,U","sourcesContent":["import React,{ useState, useEffect} from 'react';\nimport { useRouter } from 'next/router';\nimport firebaseClient from '../firebaseClient';\nimport firebase from \"firebase/app\"\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport 'firebase/storage';\nimport 'firebase/app';\n\nfirebaseClient();\nconst auth = firebase.auth();\nconst firestore =  firebase.firestore();\nconst storage = firebase.storage();\n\n\nexport default function SignGoogle () {\n  const signInWithGoogle = () => {\n    const router = useRouter();\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const Users = firestore.collection('UserList');\n    const {uid,displayName,photoURL} = auth.currentUser;\n    auth.signInWithPopup(provider);\n    Users.doc(uid).set({\n    Name:displayName,\n    photoURL,\n    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\n    uid\n  }).then(()=>{\n    //ここがうまくいっていない\n    router.replace('/');\n  })\n  }\n  return(\n    <button onClick={signInWithGoogle} >sign in with Google</button>\n  )\n}"]},"metadata":{},"sourceType":"module"}