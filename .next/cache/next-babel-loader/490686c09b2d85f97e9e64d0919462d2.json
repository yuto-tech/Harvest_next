{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\"; // Firebase設定\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA3edHzgEMFoK9bzVPHHJ3DeRFiUnHrsiI\",\n  authDomain: \"harvest-6137e.firebaseapp.com\",\n  databaseURL: \"https://harvest-6137e-default-rtdb.firebaseio.com\",\n  projectId: \"harvest-6137e\",\n  storageBucket: \"harvest-6137e.appspot.com\",\n  messagingSenderId: \"749707619690\",\n  appId: \"1:749707619690:web:5947ccf93ab56de5a10913\",\n  measurementId: \"G-RFMQZPT3CT\"\n}; // Firebase初期化\n\nvar fireapp;\n\ntry {\n  fireapp = firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // ステート初期値\n\nvar initial = {\n  message: 'START',\n  count: 0\n}; // レデューサー\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} // initStore関数（redux-store.jsで必要）\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/kataokayuuto/Desktop/react-study/Harvest_next/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireapp","initializeApp","config","error","console","log","message","initial","count","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAGA;;AACA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,+BAFS;AAGrBC,EAAAA,WAAW,EAAE,mDAHQ;AAIrBC,EAAAA,SAAS,EAAE,eAJU;AAKrBC,EAAAA,aAAa,EAAE,2BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB,C,CAUA;;AACA,IAAIC,OAAJ;;AACA,IAAI;AACFA,EAAAA,OAAO,GAAGV,QAAQ,CAACW,aAAT,CAAuBC,MAAvB,CAAV;AACD,CAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;;AACD,eAAeN,OAAf,C,CAGA;;AACA,IAAMO,OAAO,GAAG;AACdD,EAAAA,OAAO,EAAC,OADM;AAEdE,EAAAA,KAAK,EAAE;AAFO,CAAhB,C,CAMA;;AACA,SAASC,cAAT,GAAkD;AAAA,MAAzBC,KAAyB,uEAAjBH,OAAiB;AAAA,MAARI,MAAQ;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AACLN,QAAAA,OAAO,EAAE,WADJ;AAELE,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,WADJ;AAELE,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,OADJ;AAELE,QAAAA,KAAK,EAAED,OAAO,CAACC;AAFV,OAAP;;AAIF;AACE,aAAOE,KAAP;AAjBJ;AAmBD,C,CAGD;;;AACA,OAAO,SAASG,SAAT,GAAoC;AAAA,MAAjBH,KAAiB,uEAATH,OAAS;AACzC,SAAOpB,WAAW,CAACsB,cAAD,EAAiBC,KAAjB,EAChBtB,eAAe,CAACC,eAAD,CADC,CAAlB;AAED","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\n\n\n// Firebase設定\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA3edHzgEMFoK9bzVPHHJ3DeRFiUnHrsiI\",\n  authDomain: \"harvest-6137e.firebaseapp.com\",\n  databaseURL: \"https://harvest-6137e-default-rtdb.firebaseio.com\",\n  projectId: \"harvest-6137e\",\n  storageBucket: \"harvest-6137e.appspot.com\",\n  messagingSenderId: \"749707619690\",\n  appId: \"1:749707619690:web:5947ccf93ab56de5a10913\",\n  measurementId: \"G-RFMQZPT3CT\"\n};\n// Firebase初期化\nvar fireapp;\ntry {\n  fireapp = firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\nexport default fireapp;\n\n\n// ステート初期値\nconst initial = {\n  message:'START',\n  count: 0\n}\n\n\n// レデューサー\nfunction counterReducer (state = initial, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n    default:\n      return state;\n  }\n}\n\n\n// initStore関数（redux-store.jsで必要）\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state,\n    applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}