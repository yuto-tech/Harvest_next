{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase/app\";\nimport admin from \"firebase-admin\";\nimport functions from \"firebase-functions\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; //Cloud Functions で初期化する\n\nadmin.initializeApp(functions.config().firebase);\nvar db = admin.firestore();\nvar docRef = db.collection('users').doc('alovelace'); //データを追加\n\nvar setAda = docRef.set({\n  email: 'email',\n  password: 'password'\n}); //テータを読み取る\n\ndb.collection('users').get().then(function (snapshot) {\n  snapshot.forEach(function (doc) {\n    console.log(doc.id, '=>', doc.data());\n  });\n})[\"catch\"](function (err) {\n  console.log('Error getting documents', err);\n}); // Firebase設定\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA3edHzgEMFoK9bzVPHHJ3DeRFiUnHrsiI\",\n  authDomain: \"harvest-6137e.firebaseapp.com\",\n  databaseURL: \"https://harvest-6137e-default-rtdb.firebaseio.com\",\n  projectId: \"harvest-6137e\",\n  storageBucket: \"harvest-6137e.appspot.com\",\n  messagingSenderId: \"749707619690\",\n  appId: \"1:749707619690:web:5947ccf93ab56de5a10913\",\n  measurementId: \"G-RFMQZPT3CT\"\n}; // Firebase初期化\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n} // ステート初期値\n\n\nvar initial = {\n  message: 'START',\n  count: 0\n}; // レデューサー\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} // initStore関数（redux-store.jsで必要）\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/kataokayuuto/Desktop/react-study/Harvest_next/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","admin","functions","initializeApp","config","db","firestore","docRef","collection","doc","setAda","set","email","password","get","then","snapshot","forEach","console","log","id","data","err","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initial","message","count","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CAEA;;AACAD,KAAK,CAACE,aAAN,CAAoBD,SAAS,CAACE,MAAV,GAAmBJ,QAAvC;AACA,IAAIK,EAAE,GAAGJ,KAAK,CAACK,SAAN,EAAT;AAEA,IAAIC,MAAM,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,WAA3B,CAAb,C,CAEA;;AACA,IAAIC,MAAM,GAAGH,MAAM,CAACI,GAAP,CAAW;AACtBC,EAAAA,KAAK,EAAC,OADgB;AAEtBC,EAAAA,QAAQ,EAAC;AAFa,CAAX,CAAb,C,CAKA;;AACAR,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBM,GAAvB,GACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClBA,EAAAA,QAAQ,CAACC,OAAT,CAAiB,UAACR,GAAD,EAAS;AACxBS,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACW,EAAhB,EAAoB,IAApB,EAA0BX,GAAG,CAACY,IAAJ,EAA1B;AACD,GAFD;AAGD,CALH,WAMS,UAACC,GAAD,EAAS;AACdJ,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,GAAvC;AACD,CARH,E,CAUA;;AACA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,+BAFS;AAGrBC,EAAAA,WAAW,EAAE,mDAHQ;AAIrBC,EAAAA,SAAS,EAAE,eAJU;AAKrBC,EAAAA,aAAa,EAAE,2BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB,C,CAUA;;AACA,IAAI/B,QAAQ,CAACgC,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BjC,EAAAA,QAAQ,CAACG,aAAT,CAAuBoB,cAAvB;AACD,C,CAED;;;AACA,IAAMW,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAC,OADM;AAEdC,EAAAA,KAAK,EAAE;AAFO,CAAhB,C,CAMA;;AACA,SAASC,cAAT,GAAkD;AAAA,MAAzBC,KAAyB,uEAAjBJ,OAAiB;AAAA,MAARK,MAAQ;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AACLL,QAAAA,OAAO,EAAE,WADJ;AAELC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO;AACLD,QAAAA,OAAO,EAAE,WADJ;AAELC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO;AACLD,QAAAA,OAAO,EAAE,OADJ;AAELC,QAAAA,KAAK,EAAEF,OAAO,CAACE;AAFV,OAAP;;AAIF;AACE,aAAOE,KAAP;AAjBJ;AAmBD,C,CAGD;;;AACA,OAAO,SAASG,SAAT,GAAoC;AAAA,MAAjBH,KAAiB,uEAATJ,OAAS;AACzC,SAAOrC,WAAW,CAACwC,cAAD,EAAiBC,KAAjB,EAChBxC,eAAe,CAACC,eAAD,CADC,CAAlB;AAED","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase/app\";\nimport admin from \"firebase-admin\";\nimport functions from \"firebase-functions\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n//Cloud Functions で初期化する\nadmin.initializeApp(functions.config().firebase);\nlet db = admin.firestore();\n\nlet docRef = db.collection('users').doc('alovelace');\n\n//データを追加\nlet setAda = docRef.set({\n  email:'email',\n  password:'password'\n});\n\n//テータを読み取る\ndb.collection('users').get()\n  .then((snapshot) => {\n    snapshot.forEach((doc) => {\n      console.log(doc.id, '=>', doc.data());\n    });\n  })\n  .catch((err) => {\n    console.log('Error getting documents', err);\n  });\n\n// Firebase設定\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA3edHzgEMFoK9bzVPHHJ3DeRFiUnHrsiI\",\n  authDomain: \"harvest-6137e.firebaseapp.com\",\n  databaseURL: \"https://harvest-6137e-default-rtdb.firebaseio.com\",\n  projectId: \"harvest-6137e\",\n  storageBucket: \"harvest-6137e.appspot.com\",\n  messagingSenderId: \"749707619690\",\n  appId: \"1:749707619690:web:5947ccf93ab56de5a10913\",\n  measurementId: \"G-RFMQZPT3CT\"\n};\n// Firebase初期化\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\n// ステート初期値\nconst initial = {\n  message:'START',\n  count: 0\n}\n\n\n// レデューサー\nfunction counterReducer (state = initial, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n    default:\n      return state;\n  }\n}\n\n\n// initStore関数（redux-store.jsで必要）\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state,\n    applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}