{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kataokayuuto/Desktop/Harvest_next/Components/Authentication.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport firebaseClient from \"../firebaseClient\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/app\";\nfirebaseClient();\nvar auth = firebase.auth();\nvar firestore = firebase.firestore();\nvar storage = firebase.storage();\n\nvar SignGoogle = function SignGoogle() {\n  _s();\n\n  var router = useRouter();\n\n  var signInWithGoogle = function signInWithGoogle() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    var Users = firestore.collection(\"UserList\");\n    var _auth$currentUser = auth.currentUser,\n        uid = _auth$currentUser.uid,\n        displayName = _auth$currentUser.displayName,\n        photoURL = _auth$currentUser.photoURL;\n    auth.signInWithPopup(provider);\n    Users.doc(uid).set({\n      Name: displayName,\n      photoURL: photoURL,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid: uid\n    }).then(function () {\n      router.replace(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: signInWithGoogle,\n    children: \"Google\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(SignGoogle, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignGoogle;\nexport default SignGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignGoogle\");","map":{"version":3,"sources":["/Users/kataokayuuto/Desktop/Harvest_next/Components/Authentication.js"],"names":["React","useState","useEffect","useRouter","firebaseClient","firebase","auth","firestore","storage","SignGoogle","router","signInWithGoogle","provider","GoogleAuthProvider","Users","collection","currentUser","uid","displayName","photoURL","signInWithPopup","doc","set","Name","createdAt","FieldValue","serverTimestamp","then","replace"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;AACA,OAAO,cAAP;AAEAD,cAAc;AACd,IAAME,IAAI,GAAGD,QAAQ,CAACC,IAAT,EAAb;AACA,IAAMC,SAAS,GAAGF,QAAQ,CAACE,SAAT,EAAlB;AACA,IAAMC,OAAO,GAAGH,QAAQ,CAACG,OAAT,EAAhB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AACA,MAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAMC,QAAQ,GAAG,IAAIP,QAAQ,CAACC,IAAT,CAAcO,kBAAlB,EAAjB;AACA,QAAMC,KAAK,GAAGP,SAAS,CAACQ,UAAV,CAAqB,UAArB,CAAd;AAF6B,4BAGUT,IAAI,CAACU,WAHf;AAAA,QAGrBC,GAHqB,qBAGrBA,GAHqB;AAAA,QAGhBC,WAHgB,qBAGhBA,WAHgB;AAAA,QAGHC,QAHG,qBAGHA,QAHG;AAI7Bb,IAAAA,IAAI,CAACc,eAAL,CAAqBR,QAArB;AACAE,IAAAA,KAAK,CAACO,GAAN,CAAUJ,GAAV,EACGK,GADH,CACO;AACHC,MAAAA,IAAI,EAAEL,WADH;AAEHC,MAAAA,QAAQ,EAARA,QAFG;AAGHK,MAAAA,SAAS,EAAEnB,QAAQ,CAACE,SAAT,CAAmBkB,UAAnB,CAA8BC,eAA9B,EAHR;AAIHT,MAAAA,GAAG,EAAHA;AAJG,KADP,EAOGU,IAPH,CAOQ,YAAM;AACVjB,MAAAA,MAAM,CAACkB,OAAP,CAAe,GAAf;AACD,KATH;AAUD,GAfD;;AAgBA,sBAAO;AAAQ,IAAA,OAAO,EAAEjB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAnBD;;GAAMF,U;UACWN,S;;;KADXM,U;AAoBN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport firebaseClient from \"../firebaseClient\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/app\";\n\nfirebaseClient();\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst storage = firebase.storage();\n\nconst SignGoogle = () => {\n  const router = useRouter();\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const Users = firestore.collection(\"UserList\");\n    const { uid, displayName, photoURL } = auth.currentUser;\n    auth.signInWithPopup(provider);\n    Users.doc(uid)\n      .set({\n        Name: displayName,\n        photoURL,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n      })\n      .then(() => {\n        router.replace(\"/\");\n      });\n  };\n  return <button onClick={signInWithGoogle}>Googleアカウント</button>;\n};\nexport default SignGoogle;\n"]},"metadata":{},"sourceType":"module"}